--- cpp/code/handmade_opengl.cpp	2018-08-02 13:25:30.000000000 -0400
+++ handmade_opengl.cpp	2018-08-02 13:25:17.000000000 -0400
@@ -693,7 +693,7 @@
 {
     char Defines[1024];
     FormatString(sizeof(Defines), Defines,
-                 "#version 130\n"
+                 "#version 150\n"
                  "#define ShaderSimTexWriteSRGB %d\n"
                  "#define ShaderSimTexReadSRGB %d\n"
                  "#define DepthPeel %d\n",
@@ -858,7 +858,7 @@
 {
     char Defines[1024];
     FormatString(sizeof(Defines), Defines,
-                 "#version 130\n"
+                 "#version 150\n"
                  "#define ShaderSimTexWriteSRGB %d\n"
                  "#define ShaderSimTexReadSRGB %d\n"
                  "#define DepthPeel %d\n",
@@ -982,7 +982,8 @@
     DepthMax = max(DepthMax, Depth);
     }
     
-    gl_FragDepth = 0.5f*(DepthMin+DepthMax);
+    //gl_FragDepth = 0.5f*(DepthMin+DepthMax);
+    gl_FragDepth = DepthMax;
     
     v4 CombinedColor = V4(0, 0, 0, 0);
     for(s32 SampleIndex = 0;
@@ -1069,7 +1070,7 @@
 {
     char Defines[1024];
     FormatString(sizeof(Defines), Defines,
-                 "#version 130\n"
+                 "#version 150\n"
                  "#define ShaderSimTexWriteSRGB %d\n"
                  "#define ShaderSimTexReadSRGB %d\n",
                  OpenGL.ShaderSimTexWriteSRGB,
@@ -1121,6 +1122,7 @@
     char *FragmentCode = R"FOO(
     // Fragment code
     uniform v3 LightP;
+	out vec4 FragData[4];
     void main(void)
     {
     v3 FrontEmit = V3(0, 0, 0);
@@ -1141,10 +1143,10 @@
     NP = V3(1, 0, 0);
     }
     
-    gl_FragData[0].rgb = FrontEmit;
-    gl_FragData[1].rgb = BackEmit;
-    gl_FragData[2].rgb = SurfaceColor;
-    gl_FragData[3].rgb = NP;
+    FragData[0].rgb = FrontEmit;
+    FragData[1].rgb = BackEmit;
+    FragData[2].rgb = SurfaceColor;
+    FragData[3].rgb = NP;
     }
     )FOO";
     
@@ -1178,6 +1180,7 @@
     uniform sampler2D SourceSurfaceColorTex;
     uniform sampler2D SourceNPTex;
     smooth in vec2 FragUV;
+	out vec4 FragData[4];
     void main(void)
     {
     v3 SourceFrontEmit = texture(SourceFrontEmitTex, FragUV).rgb;
@@ -1190,10 +1193,10 @@
     v3 SurfaceColor = SourceSurfaceColor;
     v3 NP = SourceNP;
     
-    gl_FragData[0].rgb = FrontEmit;
-    gl_FragData[1].rgb = BackEmit;
-    gl_FragData[2].rgb = SurfaceColor;
-    gl_FragData[3].rgb = NP;
+    FragData[0].rgb = FrontEmit;
+    FragData[1].rgb = BackEmit;
+    FragData[2].rgb = SurfaceColor;
+    FragData[3].rgb = NP;
     }
     )FOO";
     
@@ -1741,7 +1744,7 @@
                              GL_STREAM_DRAW);
                 
                 zbias_program *Prog = &OpenGL.ZBiasNoDepthPeel;
-                f32 AlphaThreshold = 0.0f;
+                f32 AlphaThreshold = 0.02f;
                 if(Peeling)
                 {
                     opengl_framebuffer *PeelBuffer = GetDepthPeelReadBuffer(OnPeelIndex - 1);
